package main

import "testing"

func TestRun(t *testing.T) {
	type testCase struct {
		input  []string
		output int
	}

	// Many from the reddit, in posts where people ran into difficulties.
	testCases := []testCase{
		{
			[]string{
				"..#",
				"..1",
				"...",
				"1..",
			},
			1,
		},
		{
			[]string{
				"....#",
				"@...1",
				".1...",
				".....",
				".1...",
				"#....",
				".....",
				".?...",
				"1...1",
				".....",
				"....#",
				"....1",
				".....",
				"...#.",
				"....1",
				".....",
				"...#1",
				".....",
				"....1",
				"...#.",
			},
			8,
		},
		{
			[]string{
				".111.",
				"..#..",
			},
			111,
		},
		{
			[]string{
				"467..114..",
				"...*......",
				"..35..633.",
				"......#...",
				"617*......",
				".....+.58.",
				"..592.....",
				"......755.",
				"...$.*....",
				".664.598..",
			},
			4361,
		},

		{
			[]string{
				"12.......*..",
				"+.........34",
				".......-12..",
				"..78........",
				"..*....60...",
				"78.........9",
				".5.....23..$",
				"8...90*12...",
				"............",
				"2.2......12.",
				".*.........*",
				"1.1..503+.56",
			},
			925,
		},
		{
			[]string{
				"12.......*..",
				"+.........34",
				".......-12..",
				"..78........",
				"..*....60...",
				"78.........9",
				"15.....23..$",
				"8...90*12...",
				"............",
				"2.2......12.",
				".*.........*",
				"1.1..503+.56",
			},
			925,
		},
		{
			[]string{
				".2.",
				".*.",
				"585",
			},
			587,
		},
		{
			[]string{
				".......5......",
				"..7*..*.....4*",
				"...*13*......9",
				".......15.....",
				"..............",
				"..............",
				"..............",
				"..............",
				"..............",
				"..............",
				"21............",
				"...*9.........",
			},
			62,
		},
		{
			[]string{
				".......................*......*",
				"...910*...............233..189.",
				"2......391.....789*............",
				"...................983.........",
				"0........106-...............226",
				".%............................$",
				"...*......$812......812..851...",
				".99.711.............+.....*....",
				"...........................113.",
				"28*.....411....%...............",
			}, 7253,
		},
	}

	for i, tst := range testCases {
		res := getNumbersNextToSymbols(tst.input)
		sum := 0
		for _, n := range res {
			sum += n
		}
		if sum != tst.output {
			t.Errorf("test %d: expected %d but got %d", i, tst.output, sum)
		}
	}
}

func TestGetProductOfGearNumbers(t *testing.T) {
	type testCase struct {
		input  []string
		output int
	}

	// Many from the reddit, in posts where people ran into difficulties.
	testCases := []testCase{
		{
			[]string{
				"..#",
				"..1",
				"...",
				"1..",
			},
			0,
		},
		{
			[]string{
				"....#",
				"@...1",
				".1...",
				".....",
				".1...",
				"#....",
				".....",
				".?...",
				"1...1",
				".....",
				"....#",
				"....1",
				".....",
				"...#.",
				"....1",
				".....",
				"...#1",
				".....",
				"....1",
				"...#.",
			},
			0,
		},
		{
			[]string{
				".111.",
				"..#..",
			},
			0,
		},
		{
			[]string{
				"467..114..",
				"...*......",
				"..35..633.",
				"......#...",
				"617*......",
				".....+.58.",
				"..592.....",
				"......755.",
				"...$.*....",
				".664.598..",
			},
			467*35 + 755*598,
		},
		{
			[]string{
				"12.......*..",
				"+.........34",
				".......-12..",
				"..78........",
				"..*....60...",
				"78.........9",
				".5......23.$", // what if 23 was one position to the left?
				"8...90*12...",
				"............",
				"2.2......12.",
				"..*........*", // what happens if asterisk is one space to the left?
				"1.1..503+.56",
			},
			78*78 + 90*12 + 2*1 + 12*56,
		},
		{
			[]string{
				".2.",
				".*.",
				"585",
			},
			2 * 585,
		},
		{
			[]string{
				".......5......",
				"..7*..*.....4*",
				"....13*......9", // what should be the output if *13*
				".......15.....",
				"..............",
				"..............",
				"..............",
				"..............",
				"..............",
				"..............",
				"21............",
				"...*9.........",
			},
			7*13 + 5*13 + 13*15 + 4*9,
		},
		{
			[]string{
				".......................*......*",
				"...910*...............233..189.",
				"2......391.....789*............",
				"...................983.........",
				"0........106-...............226",
				".%............................$",
				"...*......$812......812..851...",
				".99.711.............+.....*....",
				"...........................113.",
				"28*.....411....%...............",
			}, 910*391 + 789*983 + 99*711 + 851*113,
		},
	}

	for i, tst := range testCases {
		res := getSumOfGearNumberProducts(tst.input)
		if res != tst.output {
			t.Errorf("test %d: expected %d but got %d", i, tst.output, res)
		}
	}
}
